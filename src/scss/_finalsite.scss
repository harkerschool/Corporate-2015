// General Elements
// - - - - - - - - - - - - - - - - - - - - - - - - -

.fsElement {
    position: relative;
    clear: both;
    background-color: $lightgray;
    padding: rhythm(1.5) 0;
    .fsElement {
        background-color: transparent;
        padding: 0;
    }
}

.fsElement > header,
.fsElementContent,
.fsElement > footer {
    @include grid-row();
    @include grid-column(24);
    float: none;
    .row {
        max-width: none;
        width: auto;
        margin: 0 -1rem; // not contrained by column
    }
}

.fsElement.section-wide {
    > header,
    .fsElementContent,
    > footer {
        max-width: 90rem;
        padding-left: 0;
        padding-right: 0;
    }
}

.fsElement.section-full {
    padding: 0;
    > header,
    .fsElementContent,
    > footer {
        max-width: none;
        padding-left: 0;
        padding-right: 0;
    }
    .row {
        margin: 0;
    }
}

// Content Elements
// - - - - - - - - - - - - - - - - - - - - - - - - -

.fsContent.column, .fsContent.columns {
    padding-right: 0;
    padding-left: 0;
    clear: none;
}

// Container Elements
// - - - - - - - - - - - - - - - - - - - - - - - - -

.fsContainer {
    > .fsElementContent {
        padding-right: 0;
        padding-left: 0;
    }
}

// Column Elements
// - - - - - - - - - - - - - - - - - - - - - - - - -

.fsLayout {
    @include grid-row();
}

.fsDiv, .fsOneColumnLayout .fsDiv {
    @include grid-column($columns:24, $collapse:true);
}

@media #{$medium-up} {
    .fsTwoColumnLayout .fsDiv {
        @include grid-column($columns:12, $collapse:true);
    }
}

@media #{$large-up} {
    .fsThreeColumnLayout .fsDiv {
        @include grid-column($columns:8, $collapse:true);
    }
    .fsFourColumnLayout .fsDiv {
        @include grid-column($columns:6, $collapse:true);
    }
}

// Hero
// - - - - - - - - - - - - - - - - - - - - - - - - -

.fsElement.hero {
    @extend .section-full;
}

// Navbar
// - - - - - - - - - - - - - - - - - - - - - - - - -

.fsElement.nav-bar {
    @extend .fsElement.section-full;
}

// Feature Element
// - - - - - - - - - - - - - - - - - - - - - - - - -

.fsElement.feature {
    @extend .fsElement.section-wide;
}

.fsElement.feature {
    padding: 0;
    overflow: hidden;
    > .fsElementContent {
        position: relative;
        padding-left: 0;
        padding-right: 0;
    }
}

// Accordion Element
// - - - - - - - - - - - - - - - - - - - - - - - - -

.fsAccordion {
    > .fsElementContent {
        padding-right: 0;
        padding-left: 0;
    }
}

.fsPanel {
    margin-bottom: rhythm(1);

    // button
    > header .fsElementTitle {
        @include accordion-button;
    }

    // content
    .fsAccordion & > .fsElementContent {
        min-height: 0;
    }
    > .fsElementContent > .fsElement {
        @include accordion-content;

        > header, 
        > .fsElementContent,
        > footer {
            margin: 0 (-$accordion-content-padding);
            width: auto;
            :first-child {
                margin-top: 0;
            }
            :last-child {
                margin-bottom: 0;
            }
        }

        > footer {
            padding-top: $accordion-content-padding;
        }
    }
}

// inverted accordion
.fsAccordion.accordion-invert,
.fsAccordion .fsAccordion {
    .fsPanel {
        > header .fsElementTitle {
            @include accordion-button-invert;
        }
        > .fsElementContent > .fsElement {
            @include accordion-content-invert;
        }
    }
}

// child accordion
.fsAccordion .fsAccordion {
    .fsPanel {
        border-bottom: 1px solid $default-border-color;
        margin-bottom: 0;
        &:first-child {
            border-top: 1px solid $default-border-color;
        }

        > header,
        > .fsElementContent {
            padding-left: 0;
            padding-right: 0;
        }

        > header .fsElementTitle {
            @include accordion-button-child;
        }
        > .fsElementContent > .fsElement {
            @include accordion-content-child;
        }
        &.fsStateOpen {
            > header .fsElementTitle {
                &:after {
                    content: $fa-var-chevron-up;
                }
            }
        }
    }
}

// Finalsite Block Grid
// - - - - - - - - - - - - - - - - - - - - - - - - -

// Create a custom block grid
//
// $per-row - # of items to display per row. Default: false.
// $spacing - # of ems to use as padding on each block item. Default: rem-calc(20).
// $include-spacing - Adds padding to our list item. Default: true.
// $base-style - Apply a base style to block grid. Default: true.
@mixin fs-block-grid(
  $per-row:false,
  $spacing:$block-grid-default-spacing,
  $include-spacing:true,
  $base-style:true) {

  @if $base-style {
    margin-left: 0;
    margin-right: 0;

    > .fsElementContent {
        display: block;
    }

    > .fsElementContent > .fsElement {
      display: block;
      float: $default-float;
      height: auto;
    }
  }

  @if $per-row {
    > .fsElementContent > .fsElement {
      width: 100%/$per-row;

      &:nth-of-type(1n) { clear: none; }
      &:nth-of-type(#{$per-row}n+1) { clear: both; }
      @if $align-block-grid-to-grid {
        @include block-grid-aligned($per-row, $spacing);
      }
    }
  }
}

// Generate presentational markup for block grid.
//
// $size - Name of class to use, i.e. "large" will generate .large-block-grid-1, .large-block-grid-2, etc.
@mixin fs-block-grid-html-classes($size, $include-spacing) {
  @for $i from 1 through $block-grid-elements {
    .fsElement.#{$size}-block-grid-#{($i)} {
      @include fs-block-grid($i, $block-grid-default-spacing, $include-spacing, false);
    }
  }
}

@include exports("fs-block-grid") {
  @if $include-html-block-grid-classes {

    .fsElement[class*="block-grid-"] { @include fs-block-grid; }

    @if $block-grid-media-queries {
      @media #{$small-up} {
        @include fs-block-grid-html-classes($size:small, $include-spacing:false);
      }

      @media #{$medium-up} {
        @include fs-block-grid-html-classes($size:medium, $include-spacing:false);
      }

      @media #{$large-up} {
        @include fs-block-grid-html-classes($size:large, $include-spacing:false);
      }

      @if $include-xl-html-block-grid-classes {
        @media #{$xlarge-up} {
          @include fs-block-grid-html-classes($size:xlarge, $include-spacing:false);
        }

        @media #{$xxlarge-up} {
          @include fs-block-grid-html-classes($size:xxlarge, $include-spacing:false);
        }
      }
    }
  }
}

// Global Nav Element
// - - - - - - - - - - - - - - - - - - - - - - - - -

.fsElement.global-nav {
    display: none;
}

// Page Content & Layout
// - - - - - - - - - - - - - - - - - - - - - - - - -

#fsPageContent {
    > h1 {
        @include grid-row();
        @include grid-column();
        float: none;
        margin-top: rhythm(2);
        margin-bottom: rhythm(1);
    }
    > .fsLayout {
        margin: 0;
        max-width: none;
        width: auto;
    }
}

// Account Bar
// - - - - - - - - - - - - - - - - - - - - - - - - -

$account-bar-height: 38px;

#fsAccountBar {
    top: auto;
    bottom: 0;
    background-color: $darkergray;
    color: $lightgray;
    height: $account-bar-height;
    > ul > li {
        &:hover, &:focus {
            background-color: #222;
        }
        > a {
            color: $lightgray;
        }
    }
    li > span {
        cursor: pointer;
    }
}
#fsAccountBar .fsAccountBarAvatar {
    height: $account-bar-height;
}
.fsAccountBarMenu {
    &, ul {
        background-color: rgba($white,0.9);
        @include box-shadow(0 -1px 1px rgba(black, 0.2));
    }
    a, span {
        color: $gray;
    }
    li {
        &:hover, &:focus {
            background-color: #EEE;
            > a, > a > span, > span {
                color: $darkergray;
            }
        }
    }
}
#fsAccountBar .fsAccountBarMenu {
    top: auto;
    bottom: 100%;
}
#fsAccountBar .fsAccountBarMenu ul {
    top: auto;
    bottom: 0;
    left: 100%;
}
.fsAccountBarVisible {
    #fsPageWrapper {
        padding-bottom: $account-bar-height;
    }
}

// Footer
// - - - - - - - - - - - - - - - - - - - - - - - - -

#fsPoweredByFinalsite {
    margin: 1rem;
}

// Admin
// - - - - - - - - - - - - - - - - - - - - - - - - -

.fsElementAddWrapper { 
    clear: both; 
    .hero & {
        position: absolute;
        width: 100%;
        bottom: 0;
    }
}
